// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Hogehoge",
            "url": "http://hoge.hogehoge.hoge/support",
            "email": "support@hogehoge.hoge"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/domains": {
            "get": {
                "description": "List domains from coredns",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "summary": "List domains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.DomainListResult"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add new domain to coredns",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "summary": "Add new domain",
                "parameters": [
                    {
                        "description": "Request body parameter with json format",
                        "name": "domain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.DomainRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.DomainInfoResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/domains/{domain_uuid}": {
            "get": {
                "description": "Get domain from coredns",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Domain"
                ],
                "summary": "Get domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target domain's UUID",
                        "name": "domain_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.DomainInfoResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete new domain to coredns",
                "tags": [
                    "Domain"
                ],
                "summary": "Delete domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target domain's UUID",
                        "name": "domain_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/domains/{domain_uuid}/hosts": {
            "get": {
                "description": "List hosts from domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "List hosts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target domain's UUID",
                        "name": "domain_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.DomainInfoResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add new host to domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Add new host",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target domain's UUID",
                        "name": "domain_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body parameter with json format",
                        "name": "host",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.HostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.DomainInfoResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update host info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Update host",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target domain's UUID",
                        "name": "domain_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body parameter with json format",
                        "name": "host",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.HostRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/controllers.DomainInfoResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/domains/{domain_uuid}/hosts/{host_uuid}": {
            "get": {
                "description": "Get host info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Get host",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target domain's UUID",
                        "name": "domain_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Target host's UUID",
                        "name": "host_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.DomainInfoResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete host info",
                "tags": [
                    "Host"
                ],
                "summary": "Delete host",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target domain's UUID",
                        "name": "domain_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Target host's UUID",
                        "name": "host_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/controllers.DomainInfoResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.DomainInfoResult": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.HostResult"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controllers.DomainListResult": {
            "type": "object",
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.DomainResult"
                    }
                }
            }
        },
        "controllers.DomainRequest": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                }
            }
        },
        "controllers.DomainResult": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "controllers.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "controllers.HostRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                }
            }
        },
        "controllers.HostResult": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "172.28.21.40:8080",
	BasePath:    "/v1",
	Schemes:     []string{},
	Title:       "CoreDNS API",
	Description: "REST API to manage domain info on CoreDNS",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
